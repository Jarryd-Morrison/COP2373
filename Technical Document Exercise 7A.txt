Technical Design Document 7A
Jarryd Morrison
10/25/24

Program Description:

This program is designed to recognize sentence structures in the text given to it to 
list the total number of sentences and what each sentence was.
-------------------------------------------------------------------------------------------------------------------------------------------------------
Functions Used In Program:

1. Function Name: split_into_sentences()

Description: This Funcion uses character-by-character parsing to detect the end of a sentence 
when encountering punctuation followed by white space or a capital letter.

Parameters:
text (str): A single string input containing a block of text with potentially multiple sentences.

Variables:

1.sentences (list of str): Stores each identified sentence.
2.sentence (str): Accumulates characters until a sentence boundary is detected.
3.i (int): Loop index to track the position of the current character within text.
4.char (str): Current character being evaluated in the loop.

Logical Steps:

1.Initialize sentences as an empty list and sentence as an empty string.
2.Loop through each character char in text using i to track the index:
3.After the loop ends, check if any text remains in sentence:
4.Return sentences.

Returns:
list of str: A list where each item is an individual sentence from the input text.
---------------------------------------------------------------------------------------------------------------------------------------------------------
2. display_sentences_with_count

Description:
Outputs each sentence with its respective number in sequence, followed by the total count of sentences.

Parameters:
sentences (list of str): The list of sentences generated by split_into_sentences.
Variables:

1.idx (int): Index used in the loop to keep track of the sentence number.
2.sentence (str): Each individual sentence in the sentences list during iteration.

Logical Steps:

1.Print a header ("The sentences are:").
2.Loop through each sentence in sentences with its index idx:
3.Print the total number of sentences using len(sentences).

Returns:
None (outputs directly to the console).
----------------------------------------------------------------------------------------------------------------------------------------------------------------
3. main()

Description:
Coordinates program execution by collecting input, invoking sentence parsing, and displaying the results.

Parameters:
None.

Variables:

1.text (str): Text input from the user containing multiple sentences.
2.sentences (list of str): List of sentences produced by split_into_sentences.

Logical Steps:

1.Print a prompt to the user to enter text.
2.Capture the input text from the user.
3.Call split_into_sentences(text) to parse the text into sentences and store the result in sentences.
4.Pass sentences to display_sentences_with_count to print each sentence and the total count.

Returns:
None (coordinates input, processing, and output).
------------------------------------------------------------------------------------------------------------------------------------------------------------------
GIT HUP LINK https://github.com/Jarryd-Morrison/COP2373
